View(results)
case_when(
results == c(TRUE, TRUE, TRUE) ~ "PlingPlangPlong",
results == c(TRUE, TRUE, FALSE) ~ "PlingPlang",
results == c(TRUE, FALSE, TRUE) ~ "PlingPlong",
results == c(FALSE, TRUE, TRUE) ~ "PlangPlong",
results == c(TRUE, FALSE, FALSE) ~ "Pling",
results == c(FALSE, TRUE, FALSE) ~ "Plang",
results == c(FALSE, FALSE, TRUE) ~ "Plong",
TRUE ~ as.character(number)
)
}
raindrops(1)
library(dplyr)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
print (i)
}
}
# check factors for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
View(results)
case_when(
results == c(TRUE, TRUE, TRUE) ~ "PlingPlangPlong",
results == c(TRUE, TRUE, FALSE) ~ "PlingPlang",
results == c(TRUE, FALSE, TRUE) ~ "PlingPlong",
results == c(FALSE, TRUE, TRUE) ~ "PlangPlong",
results == c(TRUE, FALSE, FALSE) ~ "Pling",
results == c(FALSE, TRUE, FALSE) ~ "Plang",
results == c(FALSE, FALSE, TRUE) ~ "Plong",
TRUE ~ as.character(number)
)
}
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
View(results)
case_when(
results[0] == TRUE ~ "Pling",
results[1] == TRUE ~ "Plang",
results[2] == TRUE ~ "Plong",
TRUE ~ as.character(number)
)
}
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
View(results)
case_when(
results[0] == TRUE ~ "Pling",
results[1] == TRUE ~ "Plang",
results[2] == TRUE ~ "Plong",
TRUE ~ as.character(number)
)
}
raindrops(1)
raindrops(3)
raindrops(5)
raindrops(7)
View(results)
View(results)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
View(results)
case_when(
results[0] == TRUE ~ "Pling",
results[1] == TRUE ~ "Plang",
results[2] == TRUE ~ "Plong",
TRUE ~ as.character(number)
)
View(results)
}
raindrops(3)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
View(results)
case_when(
results[0] == TRUE ~ "Pling",
results[1] == TRUE ~ "Plang",
results[2] == TRUE ~ "Plong",
TRUE ~ as.character(number)
)
results %>%
mutate(V1 = case_when(results[0] == TRUE ~ "Pling",
results[1] == TRUE ~ "Plang",
results[2] == TRUE ~ "Plong"))
View(results)
}
raindrops(1)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
View(results)
#case_when(
#  results[0] == TRUE ~ "Pling",
#  results[1] == TRUE ~ "Plang",
#  results[2] == TRUE ~ "Plong",
#  TRUE ~ as.character(number)
# )
results %>%
mutate(V1 = case_when(results[0] == TRUE ~ "Pling",
results[1] == TRUE ~ "Plang",
results[2] == TRUE ~ "Plong"))
View(results)
}
raindrops(1)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
View(results)
#case_when(
#  results[0] == TRUE ~ "Pling",
#  results[1] == TRUE ~ "Plang",
#  results[2] == TRUE ~ "Plong",
#  TRUE ~ as.character(number)
# )
results %>%
mutate(case_when(results[0] == TRUE ~ "Pling",
results[1] == TRUE ~ "Plang",
results[2] == TRUE ~ "Plong"))
View(results)
}
raindrops(1)
raindrops(3)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
View(results)
case_when(
factor_list == 3 ~ "Pling",
factor_list == 5 ~ "Plang",
factor_list == 7 ~ "Plong",
TRUE ~ as.character(number)
)
View(factor_list)
}
raindrops(1)
raindrops(3)
raindrops(5)
raindrops(7)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
View(results)
case_when(
factor_list == 3 ~ "Pling",
factor_list == 5 ~ "Plang",
factor_list == 7 ~ "Plong",
FALSE ~ as.character(number)
)
View(factor_list)
}
raindrops(1)
raindrops(3)
raindrops(5)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
View(results)
# if no factors were found or 3,5,7 were not factors return number
if(length(factor_list) == 0 | any(results) != TRUE) {
return(number)
}
View(factor_list)
}
raindrops(1)
raindrops(3)
raindrops(5)
raindrops(7)
raindrops(8)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors found for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
# if no factors were found or 3,5,7 were not factors return number
if(length(factor_list) == 0 | any(results) != TRUE) {
return(number)
}
# return new string
test =
mutate(results = case_when(
results == c(TRUE, TRUE, TRUE) ~ "PlingPlangPlong",
results == c(TRUE, FALSE, TRUE) ~ "PlingPlong",
results == c(TRUE, TRUE, FALSE) ~ "PlingPlang",
results == c(FALSE, TRUE, TRUE) ~ "PlangPlong",
results == c(TRUE, FALSE, FALSE) ~ "Pling",
results == c(FALSE, FALSE, TRUE) ~ "Plong",
results == c(FALSE, TRUE, FALSE) ~ "Plang",
TRUE ~ as.character(number)
)
)
}
raindrops(1)
raindrops(3)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors found for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
# if no factors were found or 3,5,7 were not factors return number
if(length(factor_list) == 0 | any(results) != TRUE) {
return(number)
}
# return new string
test = results %>%
mutate(results = case_when(
results == c(TRUE, TRUE, TRUE) ~ "PlingPlangPlong",
results == c(TRUE, FALSE, TRUE) ~ "PlingPlong",
results == c(TRUE, TRUE, FALSE) ~ "PlingPlang",
results == c(FALSE, TRUE, TRUE) ~ "PlangPlong",
results == c(TRUE, FALSE, FALSE) ~ "Pling",
results == c(FALSE, FALSE, TRUE) ~ "Plong",
results == c(FALSE, TRUE, FALSE) ~ "Plang",
TRUE ~ as.character(number)
)
)
}
raindrops(1)
raindrops(3)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors found for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
# if no factors were found or 3,5,7 were not factors return number
if(length(factor_list) == 0 | any(results) != TRUE) {
return(number)
}
result_string = ""
if(3 %in% factor_list) {
result_string <- paste0("Pling")
}
if(5 %in% factor_list) {
result_string <- paste0(result_string, "Plang")
}
if(7 %in% factor_list) {
result_string <- paste0(result_string, "Plong")
}
return(result_string)
# return new string
#test = results %>%
# mutate(results = case_when(
#  results == c(TRUE, TRUE, TRUE) ~ "PlingPlangPlong",
#  results == c(TRUE, FALSE, TRUE) ~ "PlingPlong",
# results == c(TRUE, TRUE, FALSE) ~ "PlingPlang",
#results == c(FALSE, TRUE, TRUE) ~ "PlangPlong",
#results == c(TRUE, FALSE, FALSE) ~ "Pling",
#results == c(FALSE, FALSE, TRUE) ~ "Plong",
#results == c(FALSE, TRUE, FALSE) ~ "Plang",
#TRUE ~ as.character(number)
#)
#)
}
raindrops(1)
raindrops(3)
raindrops(5)
raindrops(8)
raindrops(52)
raindrops <- function(number) {
# get factors
factor_list <- c()
for(i in 1:number) {
if((number %% i) == 0) {
factor_list <- c(factor_list, i)
}
}
# check factors found for 3, 5, 7
factor_lookup <- c(3, 5, 7)
results = is.element(factor_lookup, factor_list)
# if no factors were found or 3,5,7 were not factors return number
if(length(factor_list) == 0 | any(results) != TRUE) {
return(as.character(number))
}
result_string = ""
if(3 %in% factor_list) {
result_string <- paste0("Pling")
}
if(5 %in% factor_list) {
result_string <- paste0(result_string, "Plang")
}
if(7 %in% factor_list) {
result_string <- paste0(result_string, "Plong")
}
return(result_string)
# return new string
#test = results %>%
# mutate(results = case_when(
#  results == c(TRUE, TRUE, TRUE) ~ "PlingPlangPlong",
#  results == c(TRUE, FALSE, TRUE) ~ "PlingPlong",
# results == c(TRUE, TRUE, FALSE) ~ "PlingPlang",
#results == c(FALSE, TRUE, TRUE) ~ "PlangPlong",
#results == c(TRUE, FALSE, FALSE) ~ "Pling",
#results == c(FALSE, FALSE, TRUE) ~ "Plong",
#results == c(FALSE, TRUE, FALSE) ~ "Plang",
#TRUE ~ as.character(number)
#)
#)
}
raindrops(1)
raindrops <- function(number) {
result_string = ""
if(number %% 3 == 0) {
result_string <- paste0("Pling")
}
if(number %% 5 == 0) {
result_string <- paste0(result_string, "Plang")
}
if(number %% 7 == 0) {
result_string <- paste0(result_string, "Plong")
}
# if no factors were found or 3,5,7 were not factors return number
if(results_string == "") {
return(as.character(number))
} else {
return(result_string)
}
}
raindrops <- function(number) {
result_string = ""
if(number %% 3 == 0) {
result_string <- paste0("Pling")
}
if(number %% 5 == 0) {
result_string <- paste0(result_string, "Plang")
}
if(number %% 7 == 0) {
result_string <- paste0(result_string, "Plong")
}
# if no factors were found or 3,5,7 were not factors return number
if(result_string == "") {
return(as.character(number))
} else {
return(result_string)
}
}
raindrops <- function(number) {
result_string = ""
if(number %% 3 == 0) {
result_string <- paste0("Pling")
}
if(number %% 5 == 0) {
result_string <- paste0(result_string, "Plang")
}
if(number %% 7 == 0) {
result_string <- paste0(result_string, "Plong")
}
# if no factors were found or 3,5,7 were not factors return number
if(result_string == "") {
return(as.character(number))
} else {
return(result_string)
}
}
# This is a stub function to take two strings
# and calculate the hamming distance
hamming <- function(strand1, strand2) {
# check to make sure same length
len1 = nchar(strand1)
len2 = nchar(strand2)
if(len1 != len2) {
return
}
count = 0
for(i in strand1) {
if(strand1[i] == strand2[i]) {
count = count + 1
}
}
return(count)
}
# This is a stub function to take two strings
# and calculate the hamming distance
hamming <- function(strand1, strand2) {
# check to make sure same length
len1 = nchar(strand1)
len2 = nchar(strand2)
if(len1 != len2) {
return
}
count = 0
for(i in strand1) {
if(strand1[i] == strand2[i]) {
count = count + 1
}
}
print(count)
return(count)
}
strand1 <- "A"
strand2 <- "A"
hamming(strand1, strand2)
setwd("~/fortune500")
write.dcf(list(Package = "DMARC_code", Title = "DMARC Analysis", Description = "Top Fortune Companies and their DMARC status",
Version = "0.0", License = "", Author = "Lydia Jackson",
Maintainer = "Lydia Jackson"), file = file.path("DMARC_code", "DESCRIPTION"))
write.dcf(list(Package = "fortune500", Title = "DMARC Analysis", Description = "Top Fortune Companies and their DMARC status",
Version = "0.0", License = "", Author = "Lydia Jackson",
Maintainer = "Lydia Jackson"), file = file.path("fortune500", "DESCRIPTION"))
setwd("~/fortune500")
write.dcf(list(Package = "fortune500", Title = "DMARC Analysis", Description = "Top Fortune Companies and their DMARC status",
Version = "0.0", License = "", Author = "Lydia Jackson",
Maintainer = "Lydia Jackson"), file = file.path("fortune500", "DESCRIPTION"))
dir.create(file.path("fortune500", "R"))
setwd("~/fortune500")
dir.create("fortune500")
dir.create(file.path("fortune500", "R"))
setwd("~/")
dir.create(file.path("fortune500", "R"))
write.dcf(list(Package = "fortune500", Title = "DMARC Analysis", Description = "Top Fortune Companies and their DMARC status",
Version = "0.0", License = "", Author = "Lydia Jackson",
Maintainer = "Lydia Jackson"), file = file.path("fortune500", "DESCRIPTION"))
devtools::load_all()
setwd("~/fortune500")
devtools::load_all()
